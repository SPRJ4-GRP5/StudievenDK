@using System.Linq
@using Microsoft.EntityFrameworkCore.Internal
@using Microsoft.EntityFrameworkCore.Metadata.Internal
@using Microsoft.VisualStudio.Web.CodeGenerators.Mvc.View
@model IEnumerable<StudievenDK.Models.Case>

@{
    ViewData["Title"] = "Index";
}

    <head>
        <link href="~/css/CaseLayout.css" rel="stylesheet" />
        <script src="https://unpkg.com/vue"></script>
        <script src="~/js/VueOwnCases.js" asp-append-version="true"></script>
        <meta charset="utf-8"/>

    </head>
    
<h1>Egne Sager</h1>
<div class="col-3 master">
    @foreach (var item in Model)
    {
        <div class="master-item" onclick="select(this)" data-id="@item.CaseId" id="get-caseId">
            @item.Subject
        </div>
    }
</div>

<script>
    //var url = '/Cases';
    document.getElementById('get-caseId').addEventListener('click', getCase);

    async function getCase(CaseObject) {
        //let caseId = CaseObject.currentTarget.getAttribute('data-id').value;
        let caseId = this.dataset.id;
        let container = document.getElementById('list-cases');
        let cases = await get(`/Cases/GetCaseInfo/${caseId}`);
        for (let info of cases) {
            let row = document.createElement("tr");
            let str = `<tr><td>${info.Subject}</td>`;
            if (info.Text) {
                str += `<td>${info.Text}</td>`;
            }   
                    
            str += `<td>${info.picture}`;
            str += `</tr>`;
            row.innerHTML = str;
            container.appendChild(row);
                
        }
    }

    // fetch call
    async function get(urls) {
        let response = await fetch(urls
            //,{
            //    method: 'GET',
            //    headers: {
            //        'Content-Type': 'application/json'
            //    },
            //    body: JSON.stringify({
            //        Text: 'Text'
            //    })
            //    .then(res => {
            //        return res.json()
            //    })
            //        .then(data => console.log(data))
            //        .catch(error => console.log('ERROR'))}
                );
        return await response.text();

    }

    //new Vue({
    //    el: '#app',
    //    data: {
    //        information: data
    //    }
    //});
</script>

<div class="col-7 detail">
    <div id="app">
        <table>
            <thead>
            </thead>
            <tbody id="list-cases">
            </tbody>
        </table>
    </div>

    <div>
        <h2 class="detail-title">@Html.DisplayFor(model => model.GetEnumerator().Current.Subject)</h2>
        @*<p>
                @Html.DisplayNameFor(model => model.GetEnumerator().Current.Picture)
                @Html.DisplayFor(model => model.GetEnumerator().Current.Picture)<br/><br/>
                @Html.DisplayNameFor(model => model.GetEnumerator().Current.Text)
                @Html.DisplayFor(model => model.GetEnumerator().Current.Text)<br/><br/>
                @Html.DisplayNameFor(model => model.Subject)
                @Html.DisplayFor(model => model.GetEnumerator().Current.Subject)<br/><br/>
            </p>*@
    </div>
</div>
<div class="col-2 detail">
    <p>
        <a asp-action="Create">
            <button label="Create new case" class="CaseBtn"> Opret ny sag</button>
        </a>
    </p>
    <form asp-action="Edit" asp-controller="Cases" method="get">
        <input type="hidden" name="id" id="Edit-Id"/>
        <a asp-action="Edit">
            <button label="Edit case" class="CaseBtn">Rediger sag</button>
        </a>
    </form>
    <br />
    <form asp-action="Delete" asp-controller="Cases" method="get">
        <input type="hidden" name="id" id="Delete-Id"/>
        <a asp-action="Delete">
            <button label="Delete case" class="CaseBtn">Slet sag</button>
        </a>
    </form>
</div>

@section Scripts
{
    <script src="/"></script>
}

@*<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Text)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Subject)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UserHelper)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UserSeeker)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Course)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PictureName)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Text)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Subject)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UserHelper.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UserSeeker.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Course.CourseName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PictureName)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.CaseId">
                    <button label="Edit case" class="btns">Rediger</button>
                </a> |
                <a asp-action="Details" asp-route-id="@item.CaseId">
                    <button label="Details case" class="btns">Detaljer</button>
                </a> |
                <a asp-action="Delete" asp-route-id="@item.CaseId">
                    <button label="Delete case" class="btns">Slet</button>
                </a>
            </td>
        </tr>
}
    </tbody>
</table>*@
